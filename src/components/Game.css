.game-container {
  min-height: 100vh;
  background: linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  position: relative;
  overflow: hidden;
  padding: 10px;
  gap: 15px;
}

.game-layout {
  display: grid;
  grid-template-columns: 1.2fr 0.8fr;
  gap: 20px;
  width: 100%;
  max-width: 1400px;
  height: 100vh;
  align-items: flex-start;
  flex-shrink: 0;
  padding: 10px 0;
}

/* Left side - Game Area (Hero) */
.game-area {
  display: flex;
  flex-direction: column;
  height: 100%;
  gap: 12px;
}

/* Reactor Section (Main Hero) - Smaller */
.reactor-section {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  flex: 1;
  gap: 12px;
  position: relative;
  min-height: 280px;
}

/* Progress Panel (Left Side) */
.progress-panel {
  flex-shrink: 0;
  height: 70px;
}

/* Right side - TPS Dashboard + Energy Status */
.tps-dashboard-section {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  height: 100%;
  padding: 10px;
  padding-top: 20px;
  gap: 10px;
}

/* Start Button - Floating on Left */
.start-button-container {
  position: absolute;
  top: 10px;
  left: 10px;
  z-index: 100;
}

.compact-start-button {
  background: linear-gradient(135deg, #4a9eff 0%, #4ecdc4 100%);
  color: white;
  border: none;
  border-radius: 12px;
  padding: 12px 24px;
  font-size: 16px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 4px 15px rgba(74, 158, 255, 0.4);
  animation: buttonPulse 2s ease-in-out infinite;
}

.compact-start-button:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(74, 158, 255, 0.6);
}

@keyframes buttonPulse {
  0%, 100% { 
    box-shadow: 0 4px 15px rgba(74, 158, 255, 0.4);
  }
  50% { 
    box-shadow: 0 4px 20px rgba(74, 158, 255, 0.6);
  }
}

/* Responsive design */
@media (max-width: 1200px) {
  .game-layout {
    grid-template-columns: 1fr 1fr;
    gap: 30px;
  }
}

@media (max-width: 900px) {
  .game-layout {
    grid-template-columns: 1fr;
    grid-template-rows: auto auto;
    gap: 20px;
    height: auto;
    min-height: 100vh;
  }
  
  .game-area {
    order: 1;
    gap: 20px;
  }
  
  .tps-dashboard-section {
    order: 2;
    min-height: 400px;
  }
  
  .reactor-section {
    min-height: 300px;
  }
}

/* Background effects */
.background-effects {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: -1;
}

.background-effects .energy-particles {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    radial-gradient(circle at 20% 80%, rgba(78, 205, 196, 0.1) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(255, 107, 107, 0.1) 0%, transparent 50%),
    radial-gradient(circle at 40% 40%, rgba(69, 183, 209, 0.1) 0%, transparent 50%);
  animation: particleFloat 20s ease-in-out infinite;
}

.background-effects .core-glow {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 600px;
  height: 600px;
  background: radial-gradient(circle, rgba(78, 205, 196, 0.05) 0%, transparent 70%);
  border-radius: 50%;
  animation: coreGlowPulse 4s ease-in-out infinite;
}

@keyframes particleFloat {
  0%, 100% {
    transform: translateY(0px) rotate(0deg);
  }
  33% {
    transform: translateY(-20px) rotate(120deg);
  }
  66% {
    transform: translateY(10px) rotate(240deg);
  }
}

@keyframes coreGlowPulse {
  0%, 100% {
    opacity: 0.3;
    transform: translate(-50%, -50%) scale(1);
  }
  50% {
    opacity: 0.6;
    transform: translate(-50%, -50%) scale(1.1);
  }
}

/* Loading animation */
.game-container::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(45deg, transparent 30%, rgba(78, 205, 196, 0.1) 50%, transparent 70%);
  animation: loadingSweep 3s ease-in-out infinite;
  z-index: 5;
  pointer-events: none;
}

@keyframes loadingSweep {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
} 